#!/bin/bash

#########PARAMETERS FROM APPLICATION DIRECTOR - DEFAULTS#########
#IDM_OVD_HOST=
#IDM_OVD_PORT=
#IDM_OAM_HOSTIP=
#IDM_OAM_PORT=
#IDM_OAM_WG_PASS=

#ENV_NAME=

#########SCRIPT INTERNAL PARAMETERS#########

MOUNTPOINTLOCATION=/tmp/mount
PERFORCECONFIGLOCATION="/oracle/config/Perforce"
IDMPROPERTIESFILE="$PERFORCECONFIGLOCATION/oam.properties"

IDM_OAM_PASS=$PASSPHRASE
IDM_OAM_AS_SERVERID=$(hostname)"_aaa"
IDM_OAM_HOSTNAME=$(hostname)
IDM_OAM_SERVERNAME=$(hostname).$(dnsdomainname)
IDM_OVD_PASS=$SERVACCTPASSWORD
IDM_OAM_WG_SERVERID="portal-$ENV_NAME-webgate-1_WebGate"

###########Parameter Validation Functions##################
## Function To Display Error and Exit
function check_error()
{
   if [ ! "$?" = "0" ]; then
      error_exit "$1";
   fi
}

function error_exit()
{
   echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
   exit 1
}

## Function To Validate Integer
function valid_int()
{
   local data=$1
   if [[ $data =~ ^[0-9]{1,9}$ ]]; then
      return 0;
   else
      return 1
   fi
}

function valid_length()
{
   local data=$1
   if [[ ${#data} -ge 8 ]]; then
      return 0;
   else
      return 1
   fi
}

function echo_d()
{
    CURDATE=`date +%H:%M:%S`
    echo -e $CURDATE  "$*"
}

## Function To Replace String in a File
function replace_string_in_file()
{
   local processFile=$1
   local oldString=$2
   local newString=$3
   newStringEsc="${newString//\//\\/}"      
   
   sed -ie "s/${oldString}/${newStringEsc}/" ${processFile}
}

####################SCRIPT EXECUTION ##################
echo_d "Parameter Validation"

if [ "x${IDM_OVD_HOST}" = "x" ]; then
    error_exit "IDM_OVD_HOST not set."
fi

if [ "x${IDM_OVD_PORT}" = "x" ]; then
    error_exit "IDM_OVD_PORT not set."
fi

if [ "x${IDM_OVD_PASS}" = "x" ]; then
    error_exit "IDM_OVD_PASS not set."
fi

if [ "x${IDM_OAM_HOSTIP}" = "x" ]; then
    error_exit "IDM_OAM_HOSTIP not set."
fi

if [ "x${IDM_OAM_HOSTNAME}" = "x" ]; then
    error_exit "IDM_OAM_HOSTNAME not set."
fi

if [ "x${IDM_OAM_SERVERNAME}" = "x" ]; then
    error_exit "IDM_OAM_SERVERNAME not set."
fi

if [ "x${IDM_OAM_PORT}" = "x" ]; then
    error_exit "IDM_OAM_PORT not set."
fi

if [ "x${IDM_OAM_PASS}" = "x" ]; then
    error_exit "IDM_OAM_PASS not set."
fi

if [ "x${IDM_OAM_AS_SERVERID}" = "x" ]; then
    error_exit "IDM_OAM_AS_SERVERID not set."
fi

if [ "x${IDM_OAM_WG_SERVERID}" = "x" ]; then
    error_exit "IDM_OAM_WG_SERVERID not set."
fi

if [ "x${IDM_OAM_WG_PASS}" = "x" ]; then
    error_exit "IDM_OAM_WG_PASS not set."
fi

echo_d "Parameter Validation -- DONE"

#Create Config Directory Structure
echo_d "Creating Config Directory Structure"
mkdir -p $PERFORCECONFIGLOCATION
check_error "Errors during creating config directory structure.";
echo_d "Creating Config Directory Structure -- DONE"

# Copy IDM Perforce Template
echo_d "Copying IDM Perforce Template"
cp -rp $MOUNTPOINTLOCATION/IDM/perforce/Templates/* $PERFORCECONFIGLOCATION/.
chown -R oracle:oinstall $PERFORCECONFIGLOCATION
chmod -R 775 $PERFORCECONFIGLOCATION
check_error "Errors during copying IDM Perforce Template.";
echo_d "Copying IDM Perforce Template -- DONE"


## extract Environment Name
# Use ENV_NAME if specified.
## echo environment Name to see for which environment this blueprint is being executed, ex: dev1
echo $ENV_NAME

echo_d "Prepare oam.properties file for publishing to repo"

replace_string_in_file $IDMPROPERTIESFILE "<IDM_OVD_HOST>" "$IDM_OVD_HOST"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OVD_PORT>" "$IDM_OVD_PORT"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OVD_PASS>" "$IDM_OVD_PASS"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_HOSTIP>" "$IDM_OAM_HOSTIP"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_HOSTNAME>" "$IDM_OAM_HOSTNAME"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_SERVERNAME>" "$IDM_OAM_SERVERNAME"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_PORT>" "$IDM_OAM_PORT"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_PASS>" "$IDM_OAM_PASS"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_AS_SERVERID>" "$IDM_OAM_AS_SERVERID"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_WG_SERVERID>" "$IDM_OAM_WG_SERVERID"
replace_string_in_file $IDMPROPERTIESFILE "<IDM_OAM_WG_PASS>" "$IDM_OAM_WG_PASS"

echo_d "Prepare oam.properties file for publishing to repo -- DONE"

echo_d "Publish oam.properties file to repo"
