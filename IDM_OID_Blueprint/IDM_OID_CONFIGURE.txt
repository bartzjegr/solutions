#!/bin/bash

# Import global conf
. $global_conf

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/opt/vmware/bin
export HOME=/root

# Tested on CentOS
if [ -x /usr/sbin/selinuxenabled ] && /usr/sbin/selinuxenabled; then
    if [ -x /usr/sbin/setenforce ]; then
        /usr/sbin/setenforce Permissive
    else
        echo 'SELinux is enabled. This may cause installation to fail.'
    fi
fi

#########PARAMETERS FROM APPLICATION DIRECTOR - DEFAULTS#########
#ORACLE_HOME="/oracle/products/10.1.4.3/OID"
#OIDADMINUSER="cn=orcladmin"
#OIDADMINPASSWORD="admin123"

#########SCRIPT INTERNAL PARAMETERS#########
CONFIGTEMPLATESLOCATION="/oracle/install/OIDinstaller/Templates"
IDMCONFIGLOCATION="/oracle/config/OID"
OIDNONSSLPORT="13060"
OIDSSLPORT="13130"

OIDCHANGEPORTSCRIPT1="$IDMCONFIGLOCATION/OID_change_port_part_1.sh"
OIDCHANGEPORTSCRIPT2="$IDMCONFIGLOCATION/OID_change_port_part_2.sh"
OIDADDOAMOBJECTSSCRIPT="$IDMCONFIGLOCATION/OID_add_oam_objects.sh"
OIDMODVMWPERSONSCRIPT="$IDMCONFIGLOCATION/OID_mod_vmwPerson.sh"

ROOTSHRESPONSEFILENAME="rootsh_rsp.txt"

###########Parameter Validation Functions##################
## Function To Display Error and Exit
function check_error()
{
   if [ ! "$?" = "0" ]; then
      error_exit "$1";
   fi
}

function error_exit()
{
   echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
   exit 1
}

## Function To Validate Integer
function valid_int()
{
   local data=$1
   if [[ $data =~ ^[0-9]{1,9}$ ]]; then
      return 0;
   else
      return 1
   fi
}

function valid_length()
{
   local data=$1
   if [[ ${#data} -ge 8 ]]; then
      return 0;
   else
      return 1
   fi
}

function echo_d()
{
    CURDATE=`date +%H:%M:%S`
    echo -e $CURDATE  "$*"
}

## Function To Replace String in a File
function replace_string_in_file()
{
   local processFile=$1
   local oldString=$2
   local newString=$3
   newStringEsc="${newString//\//\\/}"      
   
   sed -ie "s/${oldString}/${newStringEsc}/" ${processFile}
}

####################SCRIPT EXECUTION ##################
echo_d "Parameter Validation"

if [ "x${CONFIGTEMPLATESLOCATION}" = "x" ]; then
    error_exit "CONFIGTEMPLATESLOCATION not set."
fi

if [ "x${IDMCONFIGLOCATION}" = "x" ]; then
    error_exit "IDMCONFIGLOCATION not set."
fi

if [ "x${ORACLE_HOME}" = "x" ]; then
    error_exit "ORACLE_HOME not set."
fi

if [ "x${OIDADMINUSER}" = "x" ]; then
    error_exit "OIDADMINUSER not set."
fi

if [ "x${OIDADMINPASSWORD}" = "x" ]; then
    error_exit "OIDADMINPASSWORD not set."
fi

if [ "x${OIDNONSSLPORT}" = "x" ]; then
    error_exit "OIDNONSSLPORT not set."
fi

if [ "x${OIDSSLPORT}" = "x" ]; then
    error_exit "OIDSSLPORT not set."
fi

echo_d "Parameter Validation -- DONE"

#Create Config Directory Structure
echo_d "Creating Config Directory Structure"
mkdir -p $IDMCONFIGLOCATION
chown -R oracle:oinstall $IDMCONFIGLOCATION
chmod -R 775 $IDMCONFIGLOCATION
check_error "Errors during creating config directory structure.";
echo_d "Creating Config Directory Structure -- DONE"

#Copy Configuration Template
echo_d "Copying Configuration Template"
cp -rp $CONFIGTEMPLATESLOCATION/*.ldif $IDMCONFIGLOCATION/.
check_error "Errors during copying ldif files.";
echo_d "Copying Configuration Template -- DONE"

#Create OID Change Port Script Part 1
echo_d "Create OID Change Port Script Part 1"

touch $OIDCHANGEPORTSCRIPT1
chown oracle:oinstall $OIDCHANGEPORTSCRIPT1
chmod a+x $OIDCHANGEPORTSCRIPT1

echo '#!/bin/bash' >> $OIDCHANGEPORTSCRIPT1
echo "cd $IDMCONFIGLOCATION" >> $OIDCHANGEPORTSCRIPT1
echo "$ORACLE_HOME/bin/ldapmodify -D $OIDADMINUSER -w $OIDADMINPASSWORD -p $OIDNONSSLPORT -f $IDMCONFIGLOCATION/mod_nonsslport.ldif" >> $OIDCHANGEPORTSCRIPT1
echo "$ORACLE_HOME/bin/ldapmodify -D $OIDADMINUSER -w $OIDADMINPASSWORD -p $OIDNONSSLPORT -f $IDMCONFIGLOCATION/mod_sslport.ldif" >> $OIDCHANGEPORTSCRIPT1

echo "$ORACLE_HOME/bin/emctl stop iasconsole" >> $OIDCHANGEPORTSCRIPT1
echo "$ORACLE_HOME/opmn/bin/opmnctl stopall" >> $OIDCHANGEPORTSCRIPT1
echo "cp -rp $ORACLE_HOME/ldap/admin/ldap.ora $ORACLE_HOME/ldap/admin/ldap.ora.orig" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDNONSSLPORT/389/\" $ORACLE_HOME/ldap/admin/ldap.ora" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDSSLPORT/636/\" $ORACLE_HOME/ldap/admin/ldap.ora" >> $OIDCHANGEPORTSCRIPT1
echo "cp -rp $ORACLE_HOME/config/ias.properties $ORACLE_HOME/config/ias.properties.orig" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDNONSSLPORT/389/\" $ORACLE_HOME/config/ias.properties" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDSSLPORT/636/\" $ORACLE_HOME/config/ias.properties" >> $OIDCHANGEPORTSCRIPT1
echo "cp -rp $ORACLE_HOME/root.sh $ORACLE_HOME/root.sh.orig" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDNONSSLPORT/389/\" $ORACLE_HOME/root.sh" >> $OIDCHANGEPORTSCRIPT1
echo "sed -ie \"s/$OIDSSLPORT/636/\" $ORACLE_HOME/root.sh" >> $OIDCHANGEPORTSCRIPT1
echo "exit \"$?\"" >> $OIDCHANGEPORTSCRIPT1

echo_d "Create OID Change Port Script Part 1 -- DONE"

#Run OID Change Port Script Part 1
echo_d "Running OID Change Port Script Part 1"
su - oracle -c $OIDCHANGEPORTSCRIPT1
check_error "Failed to change OID port.";
echo_d "Running OID Change Port Script Part 1 -- DONE"

echo_d "Running post installation script root.sh"
cp -rp $CONFIGTEMPLATESLOCATION/$ROOTSHRESPONSEFILENAME $IDMCONFIGLOCATION/.
$ORACLE_HOME/root.sh < $IDMCONFIGLOCATION/$ROOTSHRESPONSEFILENAME
echo_d "Running post installation script root.sh -- DONE"

#Create OID Change Port Script Part 2
echo_d "Create OID Change Port Script Part 2"

touch $OIDCHANGEPORTSCRIPT2
chown oracle:oinstall $OIDCHANGEPORTSCRIPT2
chmod a+x $OIDCHANGEPORTSCRIPT2

echo '#!/bin/bash' >> $OIDCHANGEPORTSCRIPT2
echo "$ORACLE_HOME/opmn/bin/opmnctl startall" >> $OIDCHANGEPORTSCRIPT2
echo "$ORACLE_HOME/bin/emctl start iasconsole" >> $OIDCHANGEPORTSCRIPT2
echo "exit \"$?\"" >> $OIDCHANGEPORTSCRIPT2
echo_d "Create OID Change Port Script Part 2 -- DONE"

#Run OID Change Port Script Part 2
echo_d "Running OID Change Port Script Part 2"
su - oracle -c $OIDCHANGEPORTSCRIPT2
check_error "Failed to change OID port.";
echo_d "Running OID Change Port Script Part 2 -- DONE"

#Create OID Add OAM Object Script
echo_d "Create OID Add OAM Object Script"

touch $OIDADDOAMOBJECTSSCRIPT
chown oracle:oinstall $OIDADDOAMOBJECTSSCRIPT
chmod a+x $OIDADDOAMOBJECTSSCRIPT

echo '#!/bin/bash' >> $OIDADDOAMOBJECTSSCRIPT
echo "cd $IDMCONFIGLOCATION" >> $OIDADDOAMOBJECTSSCRIPT
echo "$ORACLE_HOME/bin/ldapadd -h localhost -p 389 -D $OIDADMINUSER -w $OIDADMINPASSWORD -f $IDMCONFIGLOCATION/add_oam_objects.ldif" >> $OIDADDOAMOBJECTSSCRIPT
echo "$ORACLE_HOME/bin/ldapmodify -D $OIDADMINUSER -w $OIDADMINPASSWORD -p 389 -f $IDMCONFIGLOCATION/change_orcladmin_password.ldif" >> $OIDADDOAMOBJECTSSCRIPT
echo "exit \"$?\"" >> $OIDADDOAMOBJECTSSCRIPT

echo_d "Create OID Add OAM Object Script -- DONE"

#Run OID Add OAM Object Script
echo_d "Running OID Add OAM Object Script"
su - oracle -c $OIDADDOAMOBJECTSSCRIPT
check_error "Failed to add OAM objects.";
echo_d "Running OID Add OAM Object Script -- DONE"

#Create OID Modify vmwPerson Script
echo_d "Create OID Modify vmwPerson Script"

touch $OIDMODVMWPERSONSCRIPT
chown oracle:oinstall $OIDMODVMWPERSONSCRIPT
chmod a+x $OIDMODVMWPERSONSCRIPT

echo '#!/bin/bash' >> $OIDMODVMWPERSONSCRIPT
echo "cd $IDMCONFIGLOCATION" >> $OIDMODVMWPERSONSCRIPT
echo "$ORACLE_HOME/bin/ldapmodify -D $OIDADMINUSER -w $OIDADMINPASSWORD -p 389 -f $IDMCONFIGLOCATION/mod_vmwperson.ldif" >> $OIDMODVMWPERSONSCRIPT
echo "exit \"$?\"" >> $OIDMODVMWPERSONSCRIPT

echo_d "Create OID Modify vmwPerson Script -- DONE"

#Run OID Modify vmwPerson Script
echo_d "Running OID Modify vmwPerson Script"
su - oracle -c $OIDMODVMWPERSONSCRIPT
check_error "Failed to modiy vmwPerson.";
echo_d "Running OID Modify vmwPerson Script -- DONE"

return 0